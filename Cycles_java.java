// Циклы в языке Java

public class Cycles_java {
    public static void main(String[] args) {

        /*
         * for (int i = 0; i < 3; i++) {
         * // 1) цикл for состоит из 3 секций (первая выполняется только первый раз в
         * // начале
         * // при входе в тело цикла)
         * // 2) вторая секция проверяет логическое условие, и если оно верное, то
         * входим в
         * // тело цикла, а иначе - выходим
         * // 3) третья секция выполняется после второй и реализует действие, которое
         * // отображено в секции: например, у нас - это инкремент: увеличение значения
         * // переменной на 1
         * 
         * // Таким образом, цикл будет работать 3 раза - 3 итерации
         * }
         * 
         * int j = 0;
         * for (; j < 3;) {
         * // вот с таким синтаксисом можно реализовать for без 2 секций
         * }
         * 
         * while (i < 3) {
         * // тело этого цикла будет выполнять до тех пор, ПОКА условие истинно
         * }
         * 
         * do {
         * // разновидность while, в которой цикл ВСЕГДА выполнится по крайней мере 1
         * раз
         * } while (i < 3);
         */

        int[] arr = { 2, 0, 1, 3 };
        for (int el : arr) { // это - короткая версия реализации вида циклов ForEach по элементам массива
            System.out.println(el);
        }
        /*
         * for (i = 0; i < arr.length; i++) { // это - уже полная версия с индексацией
         * по элементам массива
         * int el = arr[i];
         * System.out.println(el);
         * }
         */

        int k;
        for (k = 0; k < 5; k++) {
            if (k >= 2) {
                break; // полный вынужденный выход из цикла (при этом 3 секция for будет выполнена
                       // перед выходом)
            }
            System.out.println("Yuhu!");

            if (k >= 1) {
                continue; // вынужденный переход на следующую итерацию цикла
            }
            System.out.println("Tata!");
        }
        System.out.println(k);
    }
}
