// Методы (аналоги функций, процедур и подпрограмм из других языков) в Java
public class Methods {

    public static void main(String[] args) {

        System.out.println(sum(72, 3));
        System.out.println(sum(3.2, 4.4));

        Student s = new Student();
        s.setFullName("Danielle", "Frank", "Jason");
        String name = s.getName();

        // Student.setname("Bob"); - так программа не будет работать:
        // Non-static method 'Student.setname("Bob")' cannot be referenced from a static
        // context

        System.out.println(name);

        Advice a = new Advice();
        a.message();
    }

    public static void fool() { // объявление метода и входных параметров
        // тело метода
    }

    // КЛЮЧЕВЫЕ СЛОВА ПРИ ОБЪЯВЛЕНИИ МЕТОДА
    // public - метод может вызываться из других классов (неявное использование
    // final)
    // private - метод доступен только внутри класса (метод инкапсулирован в данном
    // классе) и (неявное использование final)
    // protected - ...
    // final - метод не имеет возможности переопределяться в классах-потомках

    // static - метод принадлежит классу (статичен), а не конкретному экземпляру
    // класса

    // Нестатические методы используются чаще, чем статические
    // Они могут принадлежать любому объекту, экземпляру класса, а не всему классу
    // Они могут получать доступ и изменять поля объекта

    // вызов метода в другом классе: Methods.fool()

    // void - метод не возвращает значения
    // в обратном случае в теле метода должен быть хотя бы один оператор return с
    // выражением,
    // где тип выражения должен совпадать с типом возвращаемого значения в
    // объявлении метода

    // а уже в случае с void возврат из метода выполняется либо после выполнения
    // последнего оператора в теле метода, либо в результате выполнения оператора
    // return. И таких операторов в теле может быть несколько!

    // Два или более метода в классе, у которых число параметров, а также тип
    // входных и выходных данных разный, но название одинаковое, носят название
    // перегруженных.

    // По типу и числу параметров Java смотрит, какой из методов запустить первым.

    // А сам процесс носит название ПЕРЕГРУЗКА метода класса.

    public static int sum(int a, int b) {
        int x;
        x = a + b;
        return x;
    }

    public static double sum(double a, double b) {
        double x;
        x = a + b;
        return x;
    }
}
